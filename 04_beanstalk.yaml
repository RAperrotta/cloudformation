# (c) 2017 Amazon Web Services, Inc. or its affiliates. All Rights Reserved. This AWS Content is provided subject to the terms of the AWS Customer
# Agreement available at https://aws.amazon.com/agreement/ or other written agreement between Customer and Amazon Web Services, Inc.
AWSTemplateFormatVersion: 2010-09-09
Description: 'Creates a DotNet Application with an ALB in Beanstalk'
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups: # ParameterGroups
            - # Beanstalk Information
                Label:
                    default: "Beanstalk Information"
                Parameters:
                    - pEBApplicationName
                    - pEBEnvironmentName
                    - pEBEC2KeyName
                    - pEBEC2InstanceType
                    - pEBALBSSLCertificateArn
                    - pSolutionStackName
                    - pRDPSource1
                    - pRDPSource2
            - # Beanstalk Information
                Label:
                    default: "Application Information"
                Parameters:
                    - pApplicationBucketName
                    - pApplicationBucketKey
                    - pApplicationEnvironmentName
                    - pApplicationPort
                    - pApplicationLoggingPath
            - # Route53 Information
                Label:
                    default: "Route53 Information"
                Parameters:
                    - pDomainName
                    - pSubdomain
            - # S3 Information
                Label:
                    default: "S3 Information"
                Parameters:
                    - pCreateServerAccessLogBucket
                    - pServerAccessLogsBucketName
            - # KMS Information
                Label:
                    default: 'KMS Key Id for aws/ssm'
                Parameters:
                    - pKmsKeyId
            - # SSM Parameter Managed Policy Information
                Label:
                    default: 'SSM Parameter Managed Policy Information'
                Parameters:
                    - pSsmParameterStackName
                    - pSsmIamPolicy
            - # RDS Database Information
                Label:
                    default: "RDS Database Information"
                Parameters:
                    - pRDSSQLStackName
                    - pEbInstanceSecurityGroup
                    - pRdsSsmIamPolicy
            - # VPC Information
                Label:
                    default: "VPC Information"
                Parameters:
                    - pVpcStackName
                    - pVpcId
                    - pPublicSubnet1
                    - pPublicSubnet2
                    - pPrivateSubnet1
                    - pPrivateSubnet2
        ParameterLabels: # ParameterLabels
            pEBEnvironmentName:
                default: Beanstalk Environment Name.
            pEBApplicationName:
                default: Beanstalk Application Name.
            pEBEC2KeyName:
                default: Beanstalk Instance SSH KeyName.
            pEBEC2InstanceType:
                default: Beanstalk Instance Type.
            pEBALBSSLCertificateArn:
                default: Beanstalk Application SSL Certificate's Arn.
            pApplicationBucketKey:
                default: Path to Beanstalk Application zip Name.
            pSolutionStackName:
                default: Elastic Beanstalk Solution Stack Name.
            pApplicationEnvironmentName:
                default: Application Environment Variable
            pApplicationLoggingPath:
                default: Application Logging Path.
            pApplicationPort:
                default: The Port the Application will Bind to on the Instance.
            pRDPSource1:
                default: Source IP Range for RDP Example. 10.0.0.0/8
            pRDPSource2:
                default: Source IP Range for RDP Example. 172.16.0.0/12
            pApplicationBucketName:
                default: S3 Bucket that contains the Application zip file.
            pEbInstanceSecurityGroup:
                default: RDS Template import override for EB Security Group.
            pServerAccessLogsBucketName:
                default: Server Access Logs S3 Bucket Name.
            pCreateServerAccessLogBucket:
                default: Are you creating a New Server Access Logs Bucket?
            pSsmParameterStackName:
                default: SSM Parameter Stack Name
            pSsmIamPolicy:
                default: SSM Parameter Managed Policy Arn.
            pRdsSsmIamPolicy:
                default: RDS SSM Parameter Managed Policy Arn.
            pKmsKeyId:
                default: KMS Key Id for aws/ssm.
            pRDSSQLStackName:
                default: RDS Stack Name.
            pDomainName:
                default: Domain Name to be Mapped to the Benastalk ALB to the Domain.
            pSubdomain:
                default: The Sub-Domain that is assigned to the Beanstalk application.
            pVpcStackName:
                default: VPC Stack Name
            pPublicSubnet1:
                default: VPC Template import override for Subnet-ID for Public Subnet 1
            pPublicSubnet2:
                default: VPC Template import override for Subnet-ID for Public Subnet 2
            pPrivateSubnet1:
                default: VPC Template import override for Subnet-ID for Private Subnet 1
            pPrivateSubnet2:
                default: VPC Template import override for Subnet-ID for Private Subnet 2
            pVpcId:
                default: VPC Template import override for VPC-ID
Parameters:
    pEBEnvironmentName: # Elastic Beanstalk Environment Name
        Type: String
        Description: The Beanstalk Environment Name
        Default: ''
    pEBApplicationName: # Elastic Beanstalk Application Name
        Type: String
        Description: The Beanstalk Application Name
        Default: ''
    pEBEC2KeyName: # Elastic Beanstalk Instance SSH KeyName
        Type: AWS::EC2::KeyPair::KeyName
        Description: Beanstalk Instance SSH KeyPair
    pEBEC2InstanceType: # Elastic Beanstalk Instance Type
        Type: String
        Description: Beanstalk Instance Type
        Default: t2.medium
        AllowedValues:
            - t2.small
            - t2.medium
            - t2.large
            - t2.xlarge
            - t2.2xlarge
            - m3.medium
            - m3.large
            - m3.xlarge
            - m3.2xlarge
            - c3.large
            - c3.xlarge
            - c3.2xlarge
            - c3.4xlarge
            - c3.8xlarge
            - t1.micro
            - t2.nano
            - m1.small
            - m1.medium
            - m1.large
            - m1.xlarge
            - c1.medium
            - c1.xlarge
            - c4.large
            - c4.xlarge
            - c4.2xlarge
            - c4.4xlarge
            - c4.8xlarge
            - m2.xlarge
            - m2.2xlarge
            - m2.4xlarge
            - r4.large
            - r4.xlarge
            - r4.2xlarge
            - r4.4xlarge
            - r4.8xlarge
            - r4.16xlarge
            - m4.large
            - m4.xlarge
            - m4.2xlarge
            - m4.4xlarge
            - m4.10xlarge
            - m4.16xlarge
            - cc1.4xlarge
            - cc2.8xlarge
            - hi1.4xlarge
            - hs1.8xlarge
            - cr1.8xlarge
            - g2.2xlarge
            - g2.8xlarge
            - p2.xlarge
            - p2.8xlarge
            - p2.16xlarge
            - i2.xlarge
            - i2.2xlarge
            - i2.4xlarge
            - i2.8xlarge
            - i3.large
            - i3.xlarge
            - i3.2xlarge
            - i3.4xlarge
            - i3.8xlarge
            - i3.16xlarge
            - r3.large
            - r3.xlarge
            - r3.2xlarge
            - r3.4xlarge
            - r3.8xlarge
            - d2.xlarge
            - d2.2xlarge
            - d2.4xlarge
            - d2.8xlarge
    pEBALBSSLCertificateArn: # Elastic Beanstalk ALB SSL Certificate Arn
        Type: String
        Description: Certificate Arn from ACM.
        Default: ''
    pApplicationBucketName:
        Type: String
        Description: Elastic Beanstalk Application S3 Bucket
        Default: ''
    pApplicationBucketKey:
        Type: String
        Description: Path in the S3 to the Elastic Beanstalk Application Zip.
        Default: ''
    pApplicationLoggingPath:
        Type: String
        Description: Application Logging Path.
        Default: 'C:\Program Files\Amazon\ElasticBeanstalk\logs'
    pApplicationPort:
        Type: String
        Description: Applications Port Number on Instance.
        Default: '8443'
    pSolutionStackName:
        Type: String
        Description: Name of the Beanstalk Solution Stack.
        Default: '64bit Windows Server 2012 R2 v1.2.0 running IIS 8.5'
    pApplicationEnvironmentName:
        Type: String
        Description: ASPNETCORE_ENVIRONMENT
        Default: 'QA'
        AllowedValues:
            - QA
            - Production
            - UAT
    pRDPSource1:
        Type: String
        Description: RDP Source IP Range with CIDR.
        Default: '10.0.0.0/8'
    pRDPSource2:
        Type: String
        Description: RDP Source IP Range with CIDR.
        Default: '172.16.0.0/12'
    pServerAccessLogsBucketName: # The bucket for Server Access Logs
        Type: String
        Description: This is a required parameter. Enter the name of an Existing bucket or a New Bucket Name Format New Bucket <bucketname>. AccountId and Region will be appended to the bucket name.
        Default: ''
    pCreateServerAccessLogBucket: # Create the Server Access Bucket?
        Type: String
        Description: Defaults to false, which means the Bucket Already Exist. Expected format for existing bucket <bucketname>-<account>-<region>
        Default: 'false'
        AllowedValues:
            - 'true'
            - 'false'
    pSsmParameterStackName: # SSM Parameter CloudFormation Stack Name
        Type: String
        Description: For importing of the Output Values form the SSM Parameter CloudFormation stack
    pSsmIamPolicy:
        Type: String
        Description: SSM Template import override for Managed Policy Arn.
        Default: None
    pRdsSsmIamPolicy:
        Type: String
        Description: RDS Template import override for RDS SSM Managed Policy Arn.
        Default: None
    pKmsKeyId:
        Type: String
        Description: The KMS Key ID for the key with this alias aws/ssm
    pRDSSQLStackName: # RDS CloudFormation Stack Name
        Type: String
        Description: For importing of the Output Values form the RDS SQL CloudFormation stack
    pEbInstanceSecurityGroup: # Elastic Beanstalk Security GroupId
        Type: String
        Description: Elastic Beanstalk Security Group ID.
        Default: None
    pVpcStackName: # VPC CloudFormation Stack Name
        Type: String
        Description: VPC Template Name used for Importing VPC Parameters
    pPublicSubnet1: # VPC Public Subnet 1
        Type: String
        Description: VPC Template import override for Subnet-ID for Public Subnet 1
        Default: None
    pPublicSubnet2: # VPC Public Subnet 2
        Type: String
        Description: VPC Template import override for Subnet-ID for Public Subnet 2
        Default: None
    pPrivateSubnet1: # VPC Private Subnet 1
        Type: String
        Description: VPC Template import override for Subnet-ID for Private Subnet 1
        Default: None
    pPrivateSubnet2: # VPC Private Subnet 2
        Type: String
        Description: VPC Template import override for Subnet-ID for Private Subnet 1
        Default: None
    pVpcId: # VPC ID
        Type: String
        Description: VPC Template import override for VPC-ID
        Default: None
    pDomainName: # Application's Domain Name
        Type: String
        AllowedPattern: "^[a-zA-Z0-9_.-]*$"
        Description: Your domain name.  This should map to a hosted zone already in your account.
    pSubdomain: # Application's Sub-Domain Name
        Type: String
        Description: Your Sub-domain name.  I.E. https://sub-domain.doman  or apps.example.com
        Default: apps
Conditions:
# If pVpcId is 'None', then use Imports from 01_vpc.yml for VPC-ID
    cUsesVPCId: !Or
        - !Equals
            - !Ref 'pVpcId'
            - None
        - !Equals
            - !Ref 'pVpcId'
            - none
# If pPrivateSubnet1 is 'None', then use Imports from 01_vpc.yml for Public Subnet 1
    cUsesPrivateSubnet1SubnetId: !Or
        - !Equals
            - !Ref 'pPrivateSubnet1'
            - None
        - !Equals
            - !Ref 'pPrivateSubnet1'
            - none
# If pPrivateSubnet2 is 'None', then use Imports from 01_vpc.yml for Public Subnet 2
    cUsesPrivateSubnet2SubnetId: !Or
        - !Equals
            - !Ref 'pPrivateSubnet2'
            - None
        - !Equals
            - !Ref 'pPrivateSubnet2'
            - none
# If pPublicSubnet1 is 'None', then use Imports from 01_vpc.yml for Public Subnet 1
    cUsesPublicSubnet1SubnetId: !Or
        - !Equals
            - !Ref 'pPublicSubnet1'
            - None
        - !Equals
            - !Ref 'pPublicSubnet1'
            - none
# If pPublicSubnet2 is 'None', then use Imports from 01_vpc.yml for Public Subnet 2
    cUsesPublicSubnet2SubnetId: !Or
        - !Equals
            - !Ref 'pPublicSubnet2'
            - None
        - !Equals
            - !Ref 'pPublicSubnet2'
            - none
# If Elastic Beanstalk Security Group Id is 'None', then use Imports from the Database Template.
    cUsesebInstanceSecurityGroup: !Or
        - !Equals
            - !Ref 'pEbInstanceSecurityGroup'
            - None
        - !Equals
            - !Ref 'pEbInstanceSecurityGroup'
            - none
# If SSM Managed Policy to allow access to the SSM Parmaeters, If Arn is 'None', then use Imports from the SSM Template.
    cUsesSSMManagedPolicy: !Or
        - !Equals
            - !Ref 'pSsmIamPolicy'
            - None
        - !Equals
            - !Ref 'pSsmIamPolicy'
            - none
# If RDS SSM Managed Policy to allow access to the SSM Parmaeters, If Arn is 'None', then use Imports from the SSM Template.
    cUsesRdsSsmManagedPolicy: !Or
        - !Equals
            - !Ref 'pRdsSsmIamPolicy'
            - None
        - !Equals
            - !Ref 'pRdsSsmIamPolicy'
            - none

# Check for Server Access Bucket.
    cCreateServerAccessLogBucket: !Equals
      - !Ref 'pCreateServerAccessLogBucket'
      - 'true'
Mappings: # Mappings
    mRegionsServiceSupported: # Regional Support for Glacier.
        us-east-1:
            Glacier: GLACIER
        us-east-2:
            Glacier: GLACIER
        us-west-1:
            Glacier: GLACIER
        us-west-2:
            Glacier: GLACIER
    mRegion2ELBAccountId: # AccountId for ALB used for Access Logs.
        us-east-1:
            AccountId: "127311923021"
        us-east-2:
            AccountId: "033677994240"
        us-west-2:
            AccountId: "797873946194"
        us-west-1:
            AccountId: "027434742980"
        eu-west-1:
            AccountId: "156460612806"
        eu-central-1:
            AccountId: "054676820928"
        ap-southeast-1:
            AccountId: "114774131450"
        ap-northeast-1:
            AccountId: "582318560864"
        ap-southeast-2:
            AccountId: "783225319266"
        ap-northeast-2:
            AccountId: "600734575887"
        sa-east-1:
            AccountId: "507241528517"
        cn-north-1:
            AccountId: "638102146993"
Resources:
    rElasticBeanstalkSecurityGroup: # ElasticBeanstalk Security Group
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow RDS access from anything attached to this SG
            VpcId: !If
                - cUsesVPCId
                - 'Fn::ImportValue': !Sub "${pVpcStackName}-oVpcId"
                - !Ref 'pVpcId'
    rEBRDPIngress1: # Adding the Database Port Number to the ElasticBeanstalk Security Group
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            GroupId: !GetAtt 'rElasticBeanstalkSecurityGroup.GroupId'
            IpProtocol: tcp
            FromPort: 3389
            ToPort: 3389
            CidrIp: !Ref 'pRDPSource1'
    rEBRDPIngress2: # Adding the Database Port Number to the ElasticBeanstalk Security Group
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            GroupId: !GetAtt 'rElasticBeanstalkSecurityGroup.GroupId'
            IpProtocol: tcp
            FromPort: 3389
            ToPort: 3389
            CidrIp: !Ref 'pRDPSource2'
    rServerAccessLogsBucket: # Creates common S3 bucket for Server Access logs.
        Type: AWS::S3::Bucket
        Condition: cCreateServerAccessLogBucket
        DeletionPolicy: Retain
        Properties:
            BucketName: !Sub '${pServerAccessLogsBucketName}-${AWS::AccountId}-${AWS::Region}'
            AccessControl: LogDeliveryWrite
            VersioningConfiguration:
                Status: Enabled
    rServerAccessLogsBucketPolicy: #  S3 Bucket Policy for S3 Server Access Logs
        Type: AWS::S3::BucketPolicy
        Condition: cCreateServerAccessLogBucket
        DeletionPolicy: Retain
        DependsOn: rServerAccessLogsBucket
        Properties:
            Bucket: !Ref rServerAccessLogsBucket
            PolicyDocument:
                Statement:
                    -   Sid: ELBAccessLogs20130930
                        Action:
                            - "s3:PutObject"
                        Effect: Allow
                        Principal:
                            AWS:
                            - !FindInMap
                                - mRegion2ELBAccountId
                                - !Ref "AWS::Region"
                                - AccountId
                        Resource:
                            - !Sub 'arn:aws:s3:::${rServerAccessLogsBucket}/*'
                            - !Sub 'arn:aws:s3:::${rServerAccessLogsBucket}/${pEBEnvironmentName}/*'
                            - !Sub 'arn:aws:s3:::${rServerAccessLogsBucket}/${pEBEnvironmentName}/AWSLogs/*'
                            - !Sub 'arn:aws:s3:::${rServerAccessLogsBucket}/${pEBEnvironmentName}/AWSLogs/${AWS::AccountId}/*'
    rIAMEBServiceRole: # ElasticBeanstalk Service Role
        Type: 'AWS::IAM::Role'
        Properties:
            RoleName: !Sub '${AWS::StackName}-EBServiceRole-${AWS::Region}'
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: 'Allow'
                        Principal:
                            Service:
                                - 'elasticbeanstalk.amazonaws.com'
                        Action:
                            - 'sts:AssumeRole'
            Path: '/'
            ManagedPolicyArns:
                - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
    rIAMEBInstanceRole: # ElasticBeanstalk Instance Role
        Type: "AWS::IAM::Role"
        Properties:
            RoleName: !Sub '${AWS::StackName}-EBInstanceRole-${AWS::Region}'
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: "Allow"
                        Principal:
                            Service:
                                - "ec2.amazonaws.com"
                        Action:
                            - "sts:AssumeRole"
            Path: "/"
            ManagedPolicyArns:
                - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
                - !If
                    - cUsesSSMManagedPolicy
                    - 'Fn::ImportValue': !Sub '${pSsmParameterStackName}-oSsmIamPolicy'
                    - !Ref 'pSsmIamPolicy'
                - !If
                    - cUsesRdsSsmManagedPolicy
                    - 'Fn::ImportValue': !Sub '${pRDSSQLStackName}-oRdsSsmIamPolicy'
                    - !Ref 'pRdsSsmIamPolicy'
            Policies:
                -   PolicyName: !Sub '${AWS::StackName}-BeanstalkAccess-${AWS::Region}'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: Allow
                                Action: 's3:PutObject'
                                Resource: 'arn:aws:s3:::elasticbeanstalk-*/resources/environments/logs/*'
                -   PolicyName: !Sub '${AWS::StackName}-S3-Bucket-${AWS::Region}'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: Allow
                                Action: 's3:GetObject'
                                Resource:
                                    - !Sub 'arn:aws:s3:::${pApplicationBucketName}*'
                                    - !Sub 'arn:aws:s3:::${pApplicationBucketName}*/*'
                -   PolicyName: !Sub '${AWS::StackName}-KMS-${AWS::Region}'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: Allow
                                Action:
                                    - 'kms:Decrypt'
                                Resource:
                                    - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${pKmsKeyId}'
    rIAMEBInstanceProfile: # ElasticBeanstalk InstanceProfile
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Roles:
                - !Ref rIAMEBInstanceRole
            InstanceProfileName: !Sub '${AWS::StackName}-EBInstanceProfile-${AWS::Region}'
    rEBApplication: # ElasticBeanstalk Application Resource
        Type: "AWS::ElasticBeanstalk::Application"
        Properties:
            ApplicationName: !Ref pEBApplicationName
    rEBApplicationVersion:
        Type: 'AWS::ElasticBeanstalk::ApplicationVersion'
        Properties:
            Description: Version 1.0
            ApplicationName: !Ref rEBApplication
            SourceBundle:
                S3Bucket: !Ref 'pApplicationBucketName'
                S3Key: !Ref 'pApplicationBucketKey'
    rEBEnvironment: # ElasticBeanstalk Environment Resource
        Type: "AWS::ElasticBeanstalk::Environment"
        DependsOn: ["rIAMEBInstanceRole", "rIAMEBServiceRole"]
        Properties:
            ApplicationName: !Ref rEBApplication
            Description: "AWS Elastic Beanstalk Environment"
            EnvironmentName: !Ref pEBEnvironmentName
            CNAMEPrefix: !Ref pEBEnvironmentName
            SolutionStackName: !Ref pSolutionStackName
            VersionLabel: !Ref rEBApplicationVersion
            OptionSettings:
                -
                    Namespace: "aws:autoscaling:asg"
                    OptionName: "MinSize"
                    Value: 1
                -
                    Namespace: "aws:autoscaling:asg"
                    OptionName: "MaxSize"
                    Value: 2
                -
                    Namespace: "aws:autoscaling:launchconfiguration"
                    OptionName: "RootVolumeSize"
                    Value: 100
                -
                    Namespace: "aws:autoscaling:launchconfiguration"
                    OptionName: "EC2KeyName"
                    Value: !Ref pEBEC2KeyName
                -
                    Namespace: "aws:autoscaling:launchconfiguration"
                    OptionName: "InstanceType"
                    Value: !Ref pEBEC2InstanceType
                -
                    Namespace: "aws:autoscaling:launchconfiguration"
                    OptionName: "IamInstanceProfile"
                    Value: !Ref rIAMEBInstanceProfile
                -
                    Namespace: aws:autoscaling:launchconfiguration
                    OptionName: SSHSourceRestriction
                    Value: !Sub 'tcp, 3389, 3389, ${pRDPSource1}'
                -
                    Namespace: 'aws:autoscaling:launchconfiguration'
                    OptionName: SecurityGroups
                    Value: !Sub
                        - '${SecGrp1},${SecGrp2}'
                        - { SecGrp1: !If [cUsesebInstanceSecurityGroup, 'Fn::ImportValue': !Sub "${pRDSSQLStackName}-oEbInstanceSecurityGroup", !Ref 'pEbInstanceSecurityGroup'], SecGrp2: !GetAtt 'rElasticBeanstalkSecurityGroup.GroupId' }
                -
                    Namespace: "aws:ec2:vpc"
                    OptionName: "VPCId"
                    Value: !If
                        - cUsesVPCId
                        - 'Fn::ImportValue': !Sub "${pVpcStackName}-oVpcId"
                        - !Ref 'pVpcId'
                -
                    Namespace: "aws:ec2:vpc"
                    OptionName: "Subnets"
                    Value: !Join
                        - ','
                        - - !If
                                - cUsesPrivateSubnet1SubnetId
                                - 'Fn::ImportValue':
                                    !Sub "${pVpcStackName}-oPrivateSubnet1"
                                - !Ref 'pPrivateSubnet1'
                          - !If
                                - cUsesPrivateSubnet2SubnetId
                                - 'Fn::ImportValue':
                                    !Sub "${pVpcStackName}-oPrivateSubnet2"
                                - !Ref 'pPrivateSubnet2'
                -
                    Namespace: "aws:ec2:vpc"
                    OptionName: "ELBSubnets"
                    Value: !Join
                        - ','
                        - - !If
                                - cUsesPublicSubnet1SubnetId
                                - 'Fn::ImportValue':
                                    !Sub "${pVpcStackName}-oPublicSubnet1"
                                - !Ref 'pPublicSubnet1'
                          - !If
                                - cUsesPublicSubnet2SubnetId
                                - 'Fn::ImportValue':
                                    !Sub "${pVpcStackName}-oPublicSubnet2"
                                - !Ref 'pPublicSubnet2'
                -
                    Namespace: "aws:elbv2:loadbalancer"
                    OptionName: "AccessLogsS3Bucket"
                    Value: !If
                        - cCreateServerAccessLogBucket
                        - !Ref 'rServerAccessLogsBucket'
                        - !Ref 'pServerAccessLogsBucketName'
                -
                    Namespace: "aws:elbv2:loadbalancer"
                    OptionName: "AccessLogsS3Enabled"
                    Value: 'true'
                -
                    Namespace: "aws:elbv2:loadbalancer"
                    OptionName: "AccessLogsS3Prefix"
                    Value: !Sub '${pEBEnvironmentName}/AWSLogs/${AWS::AccountId}'
                -
                    Namespace: "aws:elbv2:listener:default"
                    OptionName: "ListenerEnabled"
                    Value: 'false'
                -
                    Namespace: "aws:elbv2:listener:443"
                    OptionName: "DefaultProcess"
                    Value: https
                -
                    Namespace: "aws:elbv2:listener:443"
                    OptionName: "ListenerEnabled"
                    Value: 'true'
                -
                    Namespace: "aws:elbv2:listener:443"
                    OptionName: "Protocol"
                    Value: HTTPS
                -
                    Namespace: "aws:elbv2:listener:443"
                    OptionName: "SSLCertificateArns"
                    Value: !Ref 'pEBALBSSLCertificateArn'
                -
                    Namespace: "aws:elasticbeanstalk:environment:process:https"
                    OptionName: MatcherHTTPCode
                    Value: 200,301
                -
                    Namespace: "aws:elasticbeanstalk:environment:process:https"
                    OptionName: Port
                    Value: !Ref 'pApplicationPort'
                -
                    Namespace: "aws:elasticbeanstalk:environment:process:https"
                    OptionName: Protocol
                    Value: HTTP
                -
                    Namespace: "aws:elasticbeanstalk:environment:process:https"
                    OptionName: StickinessEnabled
                    Value: 'true'
                -
                    Namespace: "aws:elasticbeanstalk:environment:process:https"
                    OptionName: StickinessLBCookieDuration
                    Value: '86400'
                -
                    Namespace: "aws:elasticbeanstalk:environment"
                    OptionName: "ServiceRole"
                    Value: !Ref 'rIAMEBServiceRole'
                -
                    Namespace: "aws:elasticbeanstalk:environment"
                    OptionName: "LoadBalancerType"
                    Value: application
                -
                    Namespace: "aws:elasticbeanstalk:application"
                    OptionName: "Application Healthcheck URL"
                    Value: /
                -
                    Namespace: 'aws:elasticbeanstalk:application:environment'
                    OptionName: 'ASPNETCORE_ENVIRONMENT'
                    Value: !Ref 'pApplicationEnvironmentName'
                -
                    Namespace: 'aws:elasticbeanstalk:application:environment'
                    OptionName: 'LOGGING_PATH'
                    Value: !Ref 'pApplicationLoggingPath'

                -
                    Namespace: 'aws:elasticbeanstalk:application:environment'
                    OptionName: 'APPLICATION_PORT'
                    Value: !Ref 'pApplicationPort'
                -
                    Namespace: 'aws:elasticbeanstalk:customoption'
                    OptionName: 'APPLICATION_DOMAIN'
                    Value: !Ref 'pDomainName'
                -
                    Namespace: 'aws:elasticbeanstalk:customoption'
                    OptionName: 'APPLICATION_SUB_DOMAIN'
                    Value: !Ref 'pSubdomain'
Outputs:
    oEBEndpoint: # ElasticBeanstalk DNS Endpoint
        Description: The ElasticBeanstalk endpoint needed for CloudFront and Route53
        Value: !GetAtt rEBEnvironment.EndpointURL
        Export:
            Name: !Sub "${AWS::StackName}-oEBEndpoint"
    oEBApplicationName: # ElasticBeanstalk Application Name
        Description: The name of the EB Application
        Value: !Ref rEBApplication
        Export:
            Name: !Sub "${AWS::StackName}-oEBApplicationName"
    oEBEnvironmentName: # ElasticBeanstalk Environment Name
        Description: The name of the EB Environments
        Value: !Ref rEBEnvironment
        Export:
            Name: !Sub "${AWS::StackName}-oEBEnvironmentName"
    oServerAccessLogsBucket: # Outputs the AWS Config Bucket name to be used with the Child Accounts.
        Description: This is the S3 bucket that's used for Server Access Log delivery.
        Value: !If
            - cCreateServerAccessLogBucket
            - !Ref 'rServerAccessLogsBucket'
            - !Ref 'pServerAccessLogsBucketName'
